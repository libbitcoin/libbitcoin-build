<?xml version = "1.0" ?>
<generate script="generate.gsl" language="en-us">

  <repository name="libbitcoin" version="2.7.0" email="genjix@riseup.net" >

    <package name="libbitcoin" description="Bitcoin Software Development Toolkit" url="https://github.com/libbitcoin/libbitcoin" >
      <cflag value="std=c++11" />
      <library name="bitcoin" />
      <library name="pthread" />
    </package>

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=PATH" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="testnet" default="no" define="ENABLE_TESTNET" description="Compile for testnet (deprecated)." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK"  description="Required for dynamically linking boost test." inherited="true" />

      <dependency name="boost" compiler="gcc" version="1.49.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_date_time" />
      <dependency name="boost_filesystem" />
      <dependency name="boost_regex" />
      <dependency name="boost_system" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="rt" function="clock_gettime" system="linux" />
      <dependency name="gmp" system="linux" function="__gmpz_init" header="gmp.h" />
      <dependency name="gmp" system="darwin" function="__gmpz_init" header="gmp.h" libs="/opt/local/lib" includes="/opt/local/include" />
      <dependency name="secp256k1" version="0.0.1" />

      <flag name="Wall" comment="Warn on all stuff." />
      <flag name="Wextra" comment="Warn on extra stuff." />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." />
      <flag name="Wno-missing-braces" comment="Conform to style." />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." />
      <flag name="Wno-unused-local-typedefs" compiler="gcc" comment="Clean up boost 1.49 headers." />

      <flag name="fstack-protector" link="true" comment="Protect stack." />
      <flag name="fstack-protector-all" link="true" comment="Protect stack comprehensively." />
      <flag name="fvisibility-hidden" comment="Hide internal functions from external libs." />
      <flag name="fvisibility-inlines-hidden" comment="Hide inlines from external libs." />

      <!--<template name="CompileMe.am" />-->
    </configure>

    <install>
      <build name="gmp" version="6.0.0a" parallel="true" >
        <option value="CPPFLAGS=-w" />
      </build>
      <build name="boost" compiler="gcc" version="1.49.0" parallel="true" >
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="boost" compiler="clang" version="1.54.0" parallel="true" >
        <option value="toolset=clang" />
        <option value="cxxflags=-stdlib=libc++" />
        <option value="linkflags=-stdlib=libc++" />
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="master" parallel="true" >
        <option value="--with-bignum=gmp" />
        <option value="--with-field=gmp" />
        <option value="--enable-benchmark=no" />
        <option value="--enable-tests=no" />
        <option value="--enable-endomorphism=no" />
        <option value="${gmp_flags}" />
        <!--<option value="${with_pkgconfigdir}" />-->
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <!--<option value="--disable-silent-rules" />-->
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <option value="--disable-silent-rules" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <option value="--disable-ndebug" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="--build-dir=my-build" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!-- Travis installs gmp and boost, but verify homebrew install of gmp. -->
        <get name="gmp" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost in order to get the desired version.-->
        <get name="libgmp-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-silent-rules" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <option value="--disable-static" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-blockchain" version="2.0.0" email="genjix@riseup.net" >

    <package name="libbitcoin-blockchain" description="Bitcoin Blockchain Implementation" url="https://github.com/libbitcoin/libbitcoin-blockchain" >
      <cflag value="std=c++11" />
      <library name="bitcoin-blockchain" />
    </package>

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=PATH" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="testnet" default="no" define="ENABLE_TESTNET" description="Compile for testnet (deprecated)." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK"  description="Required for dynamically linking boost test." inherited="true" />

      <dependency name="boost" compiler="gcc" version="1.49.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="bitcoin" version="2.7.0" />

      <flag name="Wall" comment="Warn on all stuff." />
      <flag name="Wextra" comment="Warn on extra stuff." />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." />
      <flag name="Wno-missing-braces" comment="Conform to style." />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." />
      <flag name="Wno-unused-local-typedefs" compiler="gcc" comment="Clean up boost 1.49 headers." />

      <flag name="fstack-protector" link="true" comment="Protect stack." />
      <flag name="fstack-protector-all" link="true" comment="Protect stack comprehensively." />
      <flag name="fvisibility-hidden" comment="Hide internal functions from external libs." />
      <flag name="fvisibility-inlines-hidden" comment="Hide inlines from external libs." />
    </configure>

    <install>
      <build name="boost" compiler="gcc" version="1.49.0" parallel="true" >
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="boost" compiler="clang" version="1.54.0" parallel="true" >
        <option value="toolset=clang" />
        <option value="cxxflags=-stdlib=libc++" />
        <option value="linkflags=-stdlib=libc++" />
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="gmp" version="6.0.0a" parallel="true" >
        <option value="CPPFLAGS=-w" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="master" parallel="true" >
        <option value="--with-bignum=gmp" />
        <option value="--with-field=gmp" />
        <option value="--enable-benchmark=no" />
        <option value="--enable-tests=no" />
        <option value="--enable-endomorphism=no" />
        <option value="${gmp_flags}" />
        <!--<option value="${with_pkgconfigdir}" />-->
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-blockchain" github="libbitcoin" repository="libbitcoin-blockchain" branch="version2" parallel="true" >
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="leveldb" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="libleveldb-dev" />
        <option value="--disable-silent-rules" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="libleveldb-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="--build-dir=my-build" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!-- Travis installs gmp and boost, but verify homebrew install of gmp. -->
        <get name="gmp" />
        <get name="leveldb" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost in order to get the desired version.-->
        <get name="libgmp-dev" />
        <get name="libleveldb-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-silent-rules" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="libleveldb-dev" />
        <option value="--disable-static" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-client" version="2.0.0" email="mienkphi@gmail.com" >

    <package name="libbitcoin-client" description="Bitcoin Client Protocol Implementation" url="https://github.com/libbitcoin/libbitcoin-client" >
      <cflag value="std=c++11" />
      <library name="bitcoin-client" />
    </package>

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=PATH" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="testnet" default="no" define="ENABLE_TESTNET" description="Compile for testnet (deprecated)." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK"  description="Required for dynamically linking boost test." inherited="true" />

      <dependency name="boost" compiler="gcc" version="1.49.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="sodium" version="1.0.0" comment="The chained zmq dependency doesn't set a minimum version for sodium." />
      <dependency name="czmq++" version="0.4.1" />
      <dependency name="bitcoin" version="2.7.0" />

      <flag name="Wall" comment="Warn on all stuff." />
      <flag name="Wextra" comment="Warn on extra stuff." />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." />
      <flag name="Wno-missing-braces" comment="Conform to style." />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." />
      <flag name="Wno-unused-local-typedefs" compiler="gcc" comment="Clean up boost 1.49 headers." />

      <!-- protobuf -->
      <flag name="Wno-unused-parameter" comment="Clean up protobuf headers." />
      <flag name="Wno-sign-compare" compiler="clang" comment="Clean up protobuf headers, static." />
      <flag name="Wno-nested-anon-types" compiler="clang" comment="Clean up protobuf headers, static." />

      <flag name="fstack-protector" link="true" comment="Protect stack." />
      <flag name="fstack-protector-all" link="true" comment="Protect stack comprehensively." />
      <flag name="fvisibility-hidden" comment="Hide internal functions from external libs." />
      <flag name="fvisibility-inlines-hidden" comment="Hide inlines from external libs." />
    </configure>

    <install>
      <build name="boost" compiler="gcc" version="1.49.0" parallel="true" >
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="boost" compiler="clang" version="1.54.0" parallel="true" >
        <option value="toolset=clang" />
        <option value="cxxflags=-stdlib=libc++" />
        <option value="linkflags=-stdlib=libc++" />
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="gmp" version="6.0.0a" parallel="true" >
        <option value="CPPFLAGS=-w" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="master" parallel="true" >
        <option value="--with-bignum=gmp" />
        <option value="--with-field=gmp" />
        <option value="--enable-benchmark=no" />
        <option value="--enable-tests=no" />
        <option value="--enable-endomorphism=no" />
        <option value="${gmp_flags}" />
        <!--<option value="${with_pkgconfigdir}" />-->
      </build>
      <build name="protobuf" github="libbitcoin" repository="protobuf" branch="2.6.0" parallel="false" >
        <option value="--enable-silent-rules" />
      </build>
      <build name="sodium" github="jedisct1" repository="libsodium" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="zmq" github="zeromq" repository="libzmq" branch="master" parallel="true" >
        <option value="--with-libsodium" />
      </build>
      <build name="czmq" github="zeromq" repository="czmq" branch="master" parallel="true" >
        <option value="--without-makecert" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmqpp" github="zeromq" repository="czmqpp" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-protocol" github="libbitcoin" repository="libbitcoin-protocol" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-client" github="libbitcoin" repository="libbitcoin-client" branch="version2" parallel="true" >
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <option value="--disable-silent-rules" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <option value="--disable-ndebug" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="--build-dir=my-build" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!-- Travis installs gmp and boost, but verify homebrew install of gmp. -->
        <get name="gmp" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost in order to get the desired version.-->
        <get name="libgmp-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-silent-rules" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <option value="--disable-static" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-explorer" version="2.0.0" email="eric@voskuil.org">

    <package name="libbitcoin-explorer" description="Bitcoin Command Line Tool" url="https://github.com/libbitcoin/libbitcoin-explorer" >
      <cflag value="std=c++11" />
      <library name="bitcoin-explorer" />
    </package>

    <configure>
      <option type="with" name="bash-completion-dir" default="no" example="[=PATH]" unprefixed="true" substitute="true" conditional="true" description="Install bash completion support, optionally specifying the directory. This option may require elevated permissions." />
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=PATH" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="testnet" default="no" define="ENABLE_TESTNET" description="Compile for testnet (deprecated)." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK"  description="Required for dynamically linking boost test." inherited="true" />

      <define name="BOOST_NO_EXCEPTIONS" comment="Capture exceptional conditions in callback function." />
      <define name="BOOST_EXCEPTION_DISABLE" comment="Disable boost exception augmentation." />

      <dependency name="boost" compiler="gcc" version="1.49.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_chrono" />
      <dependency name="boost_program_options" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="bash-completion" version="2.0.0" option="bash-completion-dir" unprefixed="true" extract="completionsdir" default="${datadir}/bash-completion/completions" />
      <dependency name="bitcoin-client" version="2.0.0" />

      <flag name="Wall" comment="Warn on all stuff." />
      <flag name="Wextra" comment="Warn on extra stuff." />
      <flag name="Wpedantic" alternate="pedantic" compiler="clang" comment="Causes numerous property_tree warnings in boost 1.49 (static, gcc)." />
      <flag name="Wno-missing-braces" comment="Conform to style." />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." />
      <flag name="Wno-unused-local-typedefs" compiler="gcc" comment="Clean up boost 1.49 headers." />

      <!-- boost static, no exceptions -->
      <flag name="Wno-maybe-uninitialized" compiler="gcc" comment="Clean up boost 1.49 headers, static with no exceptions." />
      <flag name="Wno-sometimes-uninitialized" compiler="clang" comment="Clean up boost 1.54 headers, static with no exceptions." />

      <!-- boost property_tree, no exceptions -->
      <flag name="Wno-return-type" comment="Clean up boost property_tree headers, with no exceptions." />

      <!-- protobuf -->
      <flag name="Wno-unused-parameter" comment="Clean up protobuf headers." />
      <flag name="Wno-sign-compare" compiler="clang" comment="Clean up protobuf headers." />
      <flag name="Wno-nested-anon-types" compiler="clang" comment="Clean up protobuf headers." />

      <flag name="fstack-protector" link="true" comment="Protect stack." />
      <flag name="fstack-protector-all" link="true" comment="Protect stack comprehensively." />
      <flag name="fvisibility-hidden" comment="Hide internal functions from external libs." />
      <flag name="fvisibility-inlines-hidden" comment="Hide inlines from external libs." />
    </configure>

    <install>
      <build name="boost" compiler="gcc" version="1.49.0" parallel="true" >
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="boost" compiler="clang" version="1.54.0" parallel="true" >
        <option value="toolset=clang" />
        <option value="cxxflags=-stdlib=libc++" />
        <option value="linkflags=-stdlib=libc++" />
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="gmp" version="6.0.0a" parallel="true" >
        <option value="CPPFLAGS=-w" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="master" parallel="true" >
        <option value="--with-bignum=gmp" />
        <option value="--with-field=gmp" />
        <option value="--enable-benchmark=no" />
        <option value="--enable-tests=no" />
        <option value="--enable-endomorphism=no" />
        <option value="${gmp_flags}" />
        <!--<option value="${with_pkgconfigdir}" />-->
      </build>
      <build name="protobuf" github="libbitcoin" repository="protobuf" branch="2.6.0" parallel="false" >
        <option value="--enable-silent-rules" />
      </build>
      <build name="sodium" github="jedisct1" repository="libsodium" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="zmq" github="zeromq" repository="libzmq" branch="master" parallel="true" >
        <option value="--with-libsodium" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmq" github="zeromq" repository="czmq" branch="master" parallel="true" >
        <option value="--without-makecert" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmqpp" github="zeromq" repository="czmqpp" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-protocol" github="libbitcoin" repository="libbitcoin-protocol" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-client" github="libbitcoin" repository="libbitcoin-client" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-explorer" github="libbitcoin" repository="libbitcoin-explorer" branch="version2" parallel="true" >
        <option value="--with-bash-completion-dir" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <option value="--disable-silent-rules" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="bash-completion" />
        <option value="--disable-ndebug" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="--build-dir=my-build" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!-- Travis installs gmp and boost, but verify homebrew install of gmp. -->
        <get name="gmp" />
        <get name="bash-completion" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost in order to get the desired version.-->
        <get name="libgmp-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-silent-rules" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="bash-completion" />
        <option value="--disable-static" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-node" version="2.0.0" email="genjix@riseup.net" >

    <package name="libbitcoin-node" description="Bitcoin Full Node" url="https://github.com/libbitcoin/libbitcoin-node" >
      <cflag value="std=c++11" />
      <library name="bitcoin-node" />
    </package>

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=PATH" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="testnet" default="no" define="ENABLE_TESTNET" description="Compile for testnet (deprecated)." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK"  description="Required for dynamically linking boost test." inherited="true" />

      <dependency name="boost" compiler="gcc" version="1.49.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="bitcoin" version="2.7.0" />
      <dependency name="bitcoin-blockchain" version="2.0.0" />

      <flag name="Wall" comment="Warn on all stuff." />
      <flag name="Wextra" comment="Warn on extra stuff." />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." />
      <flag name="Wno-missing-braces" comment="Conform to style." />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." />
      <flag name="Wno-unused-local-typedefs" compiler="gcc" comment="Clean up boost 1.49 headers." />

      <!-- protobuf -->
      <flag name="Wno-unused-parameter" comment="Clean up protobuf headers." />
      <flag name="Wno-sign-compare" compiler="clang" comment="Clean up protobuf headers, static." />
      <flag name="Wno-nested-anon-types" compiler="clang" comment="Clean up protobuf headers, static." />

      <flag name="fstack-protector" link="true" comment="Protect stack." />
      <flag name="fstack-protector-all" link="true" comment="Protect stack comprehensively." />
      <flag name="fvisibility-hidden" comment="Hide internal functions from external libs." />
      <flag name="fvisibility-inlines-hidden" comment="Hide inlines from external libs." />
    </configure>

    <install>
      <build name="boost" compiler="gcc" version="1.49.0" parallel="true" >
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="boost" compiler="clang" version="1.54.0" parallel="true" >
        <option value="toolset=clang" />
        <option value="cxxflags=-stdlib=libc++" />
        <option value="linkflags=-stdlib=libc++" />
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="gmp" version="6.0.0a" parallel="true" >
        <option value="CPPFLAGS=-w" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="master" parallel="true" >
        <option value="--with-bignum=gmp" />
        <option value="--with-field=gmp" />
        <option value="--enable-benchmark=no" />
        <option value="--enable-tests=no" />
        <option value="--enable-endomorphism=no" />
        <option value="${gmp_flags}" />
        <!--<option value="${with_pkgconfigdir}" />-->
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-blockchain" github="libbitcoin" repository="libbitcoin-blockchain" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-node" github="libbitcoin" repository="libbitcoin-node" branch="version2" parallel="true" >
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="leveldb" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="libleveldb-dev" />
        <option value="--disable-silent-rules" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="libleveldb-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="--build-dir=my-build" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!-- Travis installs gmp and boost, but verify homebrew install of gmp. -->
        <get name="gmp" />
        <get name="leveldb" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost in order to get the desired version.-->
        <get name="libgmp-dev" />
        <get name="libleveldb-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-silent-rules" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="libleveldb-dev" />
        <option value="--disable-static" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-protocol" version="2.0.0" email="mienkphi@gmail.com">

    <package name="libbitcoin-protocol" description="Bitcoin Blockchain Query Privacy Protocol" url="https://github.com/libbitcoin/libbitcoin-protocol" >
      <cflag value="std=c++11" />
      <library name="bitcoin-protocol" />
    </package>

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=PATH" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="testnet" default="no" define="ENABLE_TESTNET" description="Compile for testnet (deprecated)." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK"  description="Required for dynamically linking boost test." inherited="true" />

      <dependency name="boost" compiler="gcc" version="1.49.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="protobuf" version="2.6.0" unprefixed="true" />
      <dependency name="sodium" version="1.0.0" comment="The chained zmq dependency doesn't set a minimum version for sodium." />
      <dependency name="czmq++" version="0.4.1" />
      <dependency name="bitcoin" version="2.7.0" />

      <flag name="Wall" comment="Warn on all stuff." />
      <flag name="Wextra" comment="Warn on extra stuff." />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." />
      <flag name="Wno-missing-braces" comment="Conform to style." />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." />
      <flag name="Wno-unused-local-typedefs" compiler="gcc" comment="Clean up boost 1.49 headers." />

      <!-- protobuf -->
      <flag name="Wno-unused-parameter" comment="Clean up protobuf headers." />
      <flag name="Wno-sign-compare" compiler="clang" comment="Clean up protobuf headers, static." />
      <flag name="Wno-nested-anon-types" compiler="clang" comment="Clean up protobuf headers, static." />

      <flag name="fstack-protector" link="true" comment="Protect stack." />
      <flag name="fstack-protector-all" link="true" comment="Protect stack comprehensively." />
      <flag name="fvisibility-hidden" comment="Hide internal functions from external libs." />
      <flag name="fvisibility-inlines-hidden" comment="Hide inlines from external libs." />
    </configure>

    <install>
      <build name="boost" compiler="gcc" version="1.49.0" parallel="true" >
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="boost" compiler="clang" version="1.54.0" parallel="true" >
        <option value="toolset=clang" />
        <option value="cxxflags=-stdlib=libc++" />
        <option value="linkflags=-stdlib=libc++" />
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="gmp" version="6.0.0a" parallel="true" >
        <option value="CPPFLAGS=-w" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="master" parallel="true" >
        <option value="--with-bignum=gmp" />
        <option value="--with-field=gmp" />
        <option value="--enable-benchmark=no" />
        <option value="--enable-tests=no" />
        <option value="--enable-endomorphism=no" />
        <option value="${gmp_flags}" />
        <!--<option value="${with_pkgconfigdir}" />-->
      </build>
      <build name="protobuf" github="libbitcoin" repository="protobuf" branch="2.6.0" parallel="false" >
        <option value="--enable-silent-rules" />
      </build>
      <build name="sodium" github="jedisct1" repository="libsodium" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="zmq" github="zeromq" repository="libzmq" branch="master" parallel="true" >
        <option value="--with-libsodium" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmq" github="zeromq" repository="czmq" branch="master" parallel="true" >
        <option value="--without-makecert" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmqpp" github="zeromq" repository="czmqpp" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-protocol" github="libbitcoin" repository="libbitcoin-protocol" branch="version2" parallel="true" >
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="leveldb" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="libleveldb-dev" />
        <option value="--disable-silent-rules" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="libleveldb-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="--build-dir=my-build" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!-- Travis installs gmp and boost, but verify homebrew install of gmp. -->
        <get name="gmp" />
        <get name="leveldb" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost in order to get the desired version.-->
        <get name="libgmp-dev" />
        <get name="libleveldb-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-silent-rules" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="libleveldb-dev" />
        <option value="--disable-static" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-server" version="3.0.0" email="eric@voskuil.org">

    <package name="libbitcoin-server" description="Bitcoin Server Protocol Implementation" url="https://github.com/libbitcoin/libbitcoin-server/tree/version3" >
      <cflag value="std=c++11" />
      <library name="bitcoin-server" />
    </package>

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=PATH" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="testnet" default="no" define="ENABLE_TESTNET" description="Compile for testnet (deprecated)." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK"  description="Required for dynamically linking boost test." inherited="true" />

      <dependency name="boost" compiler="gcc" version="1.49.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="bitcoin-protocol" version="2.0.0" />

      <flag name="Wall" comment="Warn on all stuff." />
      <flag name="Wextra" comment="Warn on extra stuff." />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." />
      <flag name="Wno-missing-braces" comment="Conform to style." />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." />
      <flag name="Wno-unused-local-typedefs" compiler="gcc" comment="Clean up boost 1.49 headers." />

      <!-- protobuf -->
      <flag name="Wno-unused-parameter" comment="Clean up protobuf headers." />
      <flag name="Wno-sign-compare" compiler="clang" comment="Clean up protobuf headers, static." />
      <flag name="Wno-nested-anon-types" compiler="clang" comment="Clean up protobuf headers, static." />

      <flag name="fstack-protector" link="true" comment="Protect stack." />
      <flag name="fstack-protector-all" link="true" comment="Protect stack comprehensively." />
      <flag name="fvisibility-hidden" comment="Hide internal functions from external libs." />
      <flag name="fvisibility-inlines-hidden" comment="Hide inlines from external libs." />
    </configure>

    <install>
      <build name="boost" compiler="gcc" version="1.49.0" parallel="true" >
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="boost" compiler="clang" version="1.54.0" parallel="true" >
        <option value="toolset=clang" />
        <option value="cxxflags=-stdlib=libc++" />
        <option value="linkflags=-stdlib=libc++" />
        <option value="threading=single" />
        <option value="variant=release" />
        <option value="--disable-icu" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
        <option value="-d0" />
        <option value="-q" />
        <option value="${prefix}" />
        <option value="${boost_link}" />
      </build>
      <build name="gmp" version="6.0.0a" parallel="true" >
        <option value="CPPFLAGS=-w" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="master" parallel="true" >
        <option value="--with-bignum=gmp" />
        <option value="--with-field=gmp" />
        <option value="--enable-benchmark=no" />
        <option value="--enable-tests=no" />
        <option value="--enable-endomorphism=no" />
        <option value="${gmp_flags}" />
        <!--<option value="${with_pkgconfigdir}" />-->
      </build>
      <build name="protobuf" github="libbitcoin" repository="protobuf" branch="2.6.0" parallel="false" >
        <option value="--enable-silent-rules" />
      </build>
      <build name="sodium" github="jedisct1" repository="libsodium" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="zmq" github="zeromq" repository="libzmq" branch="master" parallel="true" >
        <option value="--with-libsodium" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmq" github="zeromq" repository="czmq" branch="master" parallel="true" >
        <option value="--without-makecert" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmqpp" github="zeromq" repository="czmqpp" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-protocol" github="libbitcoin" repository="libbitcoin-protocol" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-server" github="libbitcoin-server" repository="libbitcoin-server" branch="version3" parallel="true" >
        <option value="${gmp_flags}" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="leveldb" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="libleveldb-dev" />
        <option value="--disable-silent-rules" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="static" >
        <!-- Must build boost and gmp in a prefix directory to ensure static linking.-->
        <get name="libleveldb-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-shared" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="--prefix=$HOME/my-prefix" />
        <option value="--build-dir=my-build" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!-- Travis installs gmp and boost, but verify homebrew install of gmp. -->
        <get name="gmp" />
        <get name="leveldb" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <!-- Clang on linux requires libc++/c++abi (at least for boost).-->
        <!-- Must build boost in order to get the desired version.-->
        <get name="libgmp-dev" />
        <get name="libleveldb-dev" />
        <option value="--disable-ndebug" />
        <option value="--disable-silent-rules" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -stdlib=libc++'" />
        <option value="LDLIBS='-lc++ -lc++abi -lm -lc -lgcc_s -lgcc'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="libleveldb-dev" />
        <option value="--disable-static" />
        <option value="--build-gmp" />
        <option value="--build-boost" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

</generate>
