<?xml version = "1.0" ?>
<!-- Copyright (c) 2014-2015 libbitcoin developers (see COPYING). -->
<generate script="generate.gsl" language="en-us" >

  <repository name="libbitcoin" version="2.10.0" email="genjix@riseup.net" >

    <package library="bitcoin" description="Bitcoin Cross-Platform C++ Development Toolkit" url="https://github.com/libbitcoin/libbitcoin" >
      <flag value="@icu@" />
      <flag value="@testnet@" />
    </package>

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=DIR" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="with" name="examples" default="yes" conditional="true" description="Compile with examples." />
      <option type="with" name="icu" default="no" define="BOOST_HAS_ICU" substitute="true" value="-DWITH_ICU" description="Compile with International Components for Unicode." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="testnet" default="no" define="ENABLE_TESTNET" substitute="true" value="-DENABLE_TESTNET" description="Compile for testnet (deprecated)." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK" inherited="true" description="Required for dynamically linking boost test." />

      <!-- https://svn.boost.org/trac/boost/ticket/8973 [1.54] -->
      <!-- https://svn.boost.org/trac/boost/ticket/6851 [1.50-1.53] -->
      <dependency name="boost" version="1.55.0" compiler="gcc" />
      <dependency name="boost" version="1.54.0" compiler="clang" />
      <dependency name="boost_chrono" />
      <dependency name="boost_date_time" />
      <dependency name="boost_filesystem" />
      <dependency name="boost_locale" />
      <dependency name="boost_program_options" />
      <dependency name="boost_regex" />
      <dependency name="boost_system" />
      <dependency name="boost_thread" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="pthread" />
      <dependency name="rt" function="clock_gettime" system="linux" />
      <dependency name="icu-i18n" version="51.2" unprefixed="true" option="icu" />
      <!-- -ldl is missing from icu package config -->
      <dependency name="dl" function="dlopen" system="linux" optionXXX="icu" />
      <dependency name="secp256k1" version="0.0.1" />

      <flag name="std=c++11" comment="Require c++11 for all c++ products." context="c++" />
      
      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." context="c++" />
      <flag name="Wno-deprecated-declarations" compiler="gcc" comment="Clean up boost 1.55 headers." context="c++" />
      
      <flag name="Wall" comment="Warn on all stuff." context="c" />
      <flag name="Wextra" comment="Warn on extra stuff." context="c" />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." context="c" />
      <flag name="Wno-long-long" alternate="pedantic" comment="Allow use of C99 'long long' type." context="c" />
      <flag name="Wno-missing-braces" comment="Conform to style." context="c++" />
      <flag name="Wno-mismatched-tags" compiler="clang" comment="Conflict in stdlib under clang." context="c++" />
      
      <flag name="fstack-protector" comment="Protect stack." context="link" />
      <flag name="fstack-protector-all" comment="Protect stack comprehensively." context="link" />
      <flag name="fvisibility-hidden" compiler="gcc" comment="Hide internal functions from external libs." context="c++" />
      <flag name="fvisibility-inlines-hidden" compiler="gcc" comment="Hide inlines from external libs." context="c++" />
      <flag name="fno-var-tracking-assignments" compiler="gcc" comment="Limit delays and warnings." context="c++" />

      <!--<flag name="pie" comment="Create position independent code." context="link" />-->
      <!--<flag name="fPIE" comment="Create position independent code." context="c++" />-->

      <!--<template name="CompileMe.am" />-->
    </configure>

    <make>
      <product prefix="pkgconfig" >
        <file path="libbitcoin.pc" />
      </product>
      <product prefix="doc" >
        <file path="AUTHORS" />
        <file path="COPYING" />
        <file path="ChangeLog" />
        <file path="INSTALL" />
        <file path="NEWS" />
        <file path="README" />
      </product>
      <product prefix="lib" path="src" name="bitcoin" uuid="39f60708-ff48-4c22-952d-43470866f684" >
        <flag substitute="icu" />
        <flag substitute="testnet" />
        <library name="boost" />
        <library name="boost_chrono" />
        <library name="boost_date_time" />
        <library name="boost_filesystem" />
        <library name="boost_locale" />
        <library name="boost_program_options" />
        <library name="boost_regex" />
        <library name="boost_system" />
        <library name="boost_thread" />
        <library name="pthread" />
        <library name="rt" />
        <library name="icu-i18n" />
        <!-- -ldl is missing from icu package config -->
        <library name="dl" />
        <library name="secp256k1" />
        <headers path="include" />
        <sources path="src" />
      </product>
      <product prefix="bin" path="examples" name="libbitcoin_examples" install="false" option="examples" uuid="b726df7d-6d1d-48fb-ac02-34eb45f9145e" >
        <flag substitute="icu" />
        <flag substitute="testnet" />
        <library name="bitcoin" />        
        <headers path="include" />
        <sources path="examples" />
      </product>
      <product prefix="bin" path="test" name="libbitcoin_test" test="true" option="tests" uuid="51a424a9-2c12-4211-8d40-e49d1534c541" >
        <runner/>
        <flag substitute="icu" />
        <flag substitute="testnet" />
        <library name="bitcoin" />
        <library name="boost_unit_test_framework" />
        <headers path="include" />
        <sources path="test" />
      </product>
      <product prefix="include" container="bitcoin" >
        <files path="include/bitcoin" />
      </product>
    </make>

    <install>
      <build name="icu" version="55.1" parallel="true" >
        <!-- Bug in ICU build requires --enable-draft. -->
        <option value="--enable-draft" />
        <option value="--enable-tools" />
        <option value="--disable-extras" />
        <option value="--disable-icuio" />
        <option value="--disable-layout" />
        <option value="--disable-layoutex" />
        <option value="--disable-tests" />
        <option value="--disable-samples" />
      </build>
      <build name="boost" version="1.55.0" parallel="true" compiler="gcc" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-thread" />
        <option value="--with-test" />
      </build>
      <build name="boost" version="1.54.0" parallel="true" compiler="clang" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-thread" />
        <option value="--with-test" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="version4" parallel="true" >
        <option value="--disable-tests" />
        <option value="--enable-module-recovery" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
        <!--<option value="--disable-silent-rules" />-->
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <option value="--with-icu" />
        <option value="--build-icu" />
        <option value="--build-boost" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <option value="--with-icu" />
        <option value="--build-icu" />
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="static" coverage="true" >
        <!-- Coverage is only enabled on linux/gcc/static/coverage jobs. -->
        <option value="--with-icu" />
        <option value="--build-icu" />
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--build-dir=my-build" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-O0 -g -static --coverage'" />
        <option value="CXXFLAGS='-O0 -g -static --coverage'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <get name="boost" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <get name="boost1.54" />
        <option value="--with-icu" />
        <option value="--build-icu" />
        <option value="--disable-ndebug" />
        <option value="--disable-static" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <option value="--build-boost" />
      </job>
    </matrix>

  </repository>
    
  <repository name="libbitcoin-blockchain" version="2.2.0" email="genjix@riseup.net" >

    <package library="bitcoin-blockchain" description="Bitcoin Blockchain Implementation" url="https://github.com/libbitcoin/libbitcoin-blockchain" />

    <configure>
      <option type="with" name="consensus" default="yes" define="WITH_CONSENSUS" description="Link libbitcoin-consensus and use for consensus checks." />
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=DIR" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="with" name="tools" default="yes" conditional="true" description="Compile with tools." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK" inherited="true" description="Required for dynamically linking boost test." />

      <dependency name="boost" compiler="gcc" version="1.55.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="bitcoin" version="2.10.0" />
      <dependency name="bitcoin-consensus" version="1.3.0" option="consensus" />
      
      <flag name="std=c++11" comment="Require c++11 for all c++ products." context="c++" />

      <flag name="Wall" comment="Warn on all stuff." context="c" />
      <flag name="Wextra" comment="Warn on extra stuff." context="c" />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." context="c" />
      <flag name="Wno-missing-braces" comment="Conform to style." context="c++" />
      <flag name="Wno-mismatched-tags" compiler="clang" comment="Conflict in stdlib under clang." context="c++" />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." context="c++" />
      <flag name="Wno-deprecated-declarations" compiler="gcc" comment="Clean up boost 1.55 headers." context="c++" />
      
      <flag name="fstack-protector" comment="Protect stack." context="link" />
      <flag name="fstack-protector-all" comment="Protect stack comprehensively." context="link" />
      <flag name="fvisibility-hidden" compiler="gcc" comment="Hide internal functions from external libs." context="c++" />
      <flag name="fvisibility-inlines-hidden" compiler="gcc" comment="Hide inlines from external libs." context="c++" />
    </configure>

    <make>
      <product prefix="pkgconfig" >
        <file path="libbitcoin-blockchain.pc" />
      </product>
      <product prefix="doc" >
        <file path="AUTHORS" />
        <file path="COPYING" />
        <file path="ChangeLog" />
        <file path="INSTALL" />
        <file path="NEWS" />
        <file path="README" />
      </product>
      <product prefix="lib" path="src" name="bitcoin-blockchain" uuid="868dab9e-fd33-497f-9468-c9000b3d7801" >
        <library name="bitcoin" />
        <library name="bitcoin-consensus" />
        <headers path="include" />
        <sources path="src" />
      </product>
      <product prefix="bin" path="test" name="libbitcoin_blockchain_test" test="true" option="tests" uuid="cec6de45-b67a-487f-b3ad-3d14e83ad032" >
        <runner>
          <run test="databases" />
          <run test="disk_objs" />
          <run test="htdb" />
          <!-- Too much for Travis. -->
          <!--<run test="database_interface" />-->
        </runner>
        <library name="bitcoin-blockchain" />        
        <library name="boost_unit_test_framework" />
        <headers path="include" />
        <sources path="test" />
      </product>
      <product prefix="bin" path="tools/block_db" name="block_db" install="false" option="tools" uuid="b9ced930-2ec0-4639-9427-d8edb9a677ac" >
        <library name="bitcoin-blockchain" />        
        <headers path="include" />
        <sources path="tools/block_db" />
      </product>
      <product prefix="bin" path="tools/count_records" name="count_records" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/count_records" />
      </product>
      <product prefix="bin" path="tools/history_db" name="history_db" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/history_db" />
      </product>
      <product prefix="bin" path="tools/initchain" name="initchain" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/initchain" />
      </product>
      <product prefix="bin" path="tools/mmr_add_row" name="mmr_add_row" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/mmr_add_row" />
      </product>
      <product prefix="bin" path="tools/mmr_create" name="mmr_create" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/mmr_create" />
      </product>
      <product prefix="bin" path="tools/mmr_delete_last_row" name="mmr_delete_last_row" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/mmr_delete_last_row" />
      </product>
      <product prefix="bin" path="tools/mmr_lookup" name="mmr_lookup" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/mmr_lookup" />
      </product>
      <product prefix="bin" path="tools/read_htdb_record_value" name="read_htdb_record_value" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/read_htdb_record_value" />
      </product>
      <product prefix="bin" path="tools/read_htdb_slab_value" name="read_htdb_slab_value" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/read_htdb_slab_value" />
      </product>
      <product prefix="bin" path="tools/show_array" name="show_array" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/show_array" />
      </product>
      <product prefix="bin" path="tools/show_linked_records" name="show_linked_records" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/show_linked_records" />
      </product>
      <product prefix="bin" path="tools/show_records" name="show_records" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/show_records" />
      </product>
      <product prefix="bin" path="tools/spend_db" name="spend_db" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/spend_db" />
      </product>
      <product prefix="bin" path="tools/stealth_db" name="stealth_db" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/stealth_db" />
      </product>
      <product prefix="bin" path="tools/transaction_db" name="transaction_db" install="false" option="tools" uuid="" >
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="tools/transaction_db" />
      </product>
      <product prefix="include" container="bitcoin" >
        <files path="include/bitcoin" />
      </product>
    </make>

    <install>
      <build name="boost" version="1.55.0" parallel="true" compiler="gcc" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="boost" version="1.54.0" parallel="true" compiler="clang" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="version4" parallel="true" >
        <option value="--disable-tests" />
        <option value="--enable-module-recovery" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-examples" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-consensus" github="libbitcoin" repository="libbitcoin-consensus" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-blockchain" github="libbitcoin" repository="libbitcoin-blockchain" branch="version2" parallel="true" >
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <option value="--without-consensus" />
        <!-- these allow unused build to complete -->
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="static" coverage="true" >
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--build-dir=my-build" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-O0 -g -static --coverage'" />
        <option value="CXXFLAGS='-O0 -g -static --coverage'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!--<get name="boost" />-->
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <get name="boost1.54" />
        <option value="--disable-ndebug" />
        <option value="--disable-static" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <option value="--without-consensus" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CFLAGS='-Os -s'" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-client" version="2.2.0" email="mienkphi@gmail.com" >

    <package library="bitcoin-client" description="Bitcoin Client Protocol Implementation" url="https://github.com/libbitcoin/libbitcoin-client" />

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=DIR" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="with" name="examples" default="yes" conditional="true" description="Compile with examples." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK" inherited="true" description="Required for dynamically linking boost test." />

      <dependency name="boost" compiler="gcc" version="1.55.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="sodium" version="1.0.0" comment="The chained zmq dependency doesn't set a minimum version for sodium." />
      <dependency name="czmq++" version="1.1.0" />
      <dependency name="bitcoin" version="2.10.0" />
      
      <flag name="std=c++11" comment="Require c++11 for all c++ products." context="c++" />

      <flag name="Wall" comment="Warn on all stuff." context="c" />
      <flag name="Wextra" comment="Warn on extra stuff." context="c" />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." context="c" />
      <flag name="Wno-missing-braces" comment="Conform to style." context="c++" />
      <flag name="Wno-mismatched-tags" compiler="clang" comment="Conflict in stdlib under clang." context="c++" />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." context="c++" />
      <flag name="Wno-deprecated-declarations" compiler="gcc" comment="Clean up boost 1.55 headers." context="c++" />

      <flag name="fstack-protector" comment="Protect stack." context="link" />
      <flag name="fstack-protector-all" comment="Protect stack comprehensively." context="link" />
      <flag name="fvisibility-hidden" compiler="gcc" comment="Hide internal functions from external libs." context="c++" />
      <flag name="fvisibility-inlines-hidden" compiler="gcc" comment="Hide inlines from external libs." context="c++" />
    </configure>

    <make>
      <product prefix="pkgconfig" >
        <file path="libbitcoin-client.pc" />
      </product>
      <product prefix="doc" >
        <file path="AUTHORS" />
        <file path="COPYING" />
        <file path="ChangeLog" />
        <file path="INSTALL" />
        <file path="NEWS" />
        <file path="README" />
      </product>
      <product prefix="lib" path="src" name="bitcoin-client" uuid="475e189d-f147-4122-b5fe-5bcf1153696e" >
        <library name="bitcoin" />
        <library name="sodium" />
        <library name="czmq++" />
        <headers path="include" />
        <sources path="src" />
      </product>
      <product prefix="bin" path="test" name="libbitcoin_client_test" test="true" option="tests" uuid="a56a00c6-669b-4535-9dc2-772a931b04c2" >
        <runner/>
        <library name="bitcoin-client" />        
        <library name="boost_unit_test_framework" />
        <headers path="include" />
        <sources path="test" />
      </product>
      <product prefix="bin" path="examples/console" name="console" install="false" option="examples" uuid="fbcc58ad-93a1-4247-b660-b32c61aca680" >
        <library name="bitcoin-client" />        
        <headers path="include" />
        <sources path="examples/console" />
      </product>
      <product prefix="bin" path="examples/get_height" name="get_height" install="false" option="examples" uuid="" >
        <library name="bitcoin-client" />        
        <headers path="include" />
        <sources path="examples/get_height" />
      </product>
      <product prefix="include" container="bitcoin" >
        <files path="include/bitcoin" />
      </product>
    </make>

    <install>
      <build name="boost" version="1.55.0" parallel="true" compiler="gcc" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="boost" version="1.54.0" parallel="true" compiler="clang" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="sodium" github="jedisct1" repository="libsodium" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="zmq" github="zeromq" repository="libzmq" branch="master" parallel="true" >
        <option value="--with-libsodium" />
      </build>
      <build name="czmq" github="zeromq" repository="czmq" branch="master" parallel="true" >
        <option value="--without-zmakecert" />
        <option value="--without-test_zgossip" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmqpp" github="zeromq" repository="czmqpp" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="version4" parallel="true" >
        <option value="--disable-tests" />
        <option value="--enable-module-recovery" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-examples" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-client" github="libbitcoin" repository="libbitcoin-client" branch="version2" parallel="true" >
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="static" coverage="true" >
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--build-dir=my-build" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-O0 -g -static --coverage'" />
        <option value="CXXFLAGS='-O0 -g -static --coverage'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!--<get name="boost" />-->
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <get name="boost1.54" />
        <option value="--disable-ndebug" />
        <option value="--disable-static" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CFLAGS='-Os -s'" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-consensus" version="1.3.0" email="eric@voskuil.org" >

    <package library="bitcoin-consensus" description="Libbitcoin Consensus Library" url="https://github.com/libbitcoin/libbitcoin-consensus" />

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=DIR" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="with" name="java" default="no" conditional="true" description="Compile the Java bindings." />
      <option type="with" name="python" default="no" conditional="true" description="Compile the Python bindings." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK" inherited="true" description="Required for dynamically linking boost test." />
      
      <!-- Locate function declarations and define found header and export symbols. -->
      <define header="byteswap.h" export="bswap_16" />
      <define header="byteswap.h" export="bswap_32" />
      <define header="byteswap.h" export="bswap_64" />
      
      <define header="endian.h" export="le16toh" />
      <define header="endian.h" export="le32toh" />
      <define header="endian.h" export="le64toh" />
      <define header="endian.h" export="htole16" />
      <define header="endian.h" export="htole32" />
      <define header="endian.h" export="htole64" />
      <define header="endian.h" export="be16toh" />
      <define header="endian.h" export="be32toh" />
      <define header="endian.h" export="be64toh" />
      <define header="endian.h" export="htobe16" />
      <define header="endian.h" export="htobe32" />
      <define header="endian.h" export="htobe64" />
      
      <define header="sys/endian.h" export="le16toh" />
      <define header="sys/endian.h" export="le32toh" />
      <define header="sys/endian.h" export="le64toh" />
      <define header="sys/endian.h" export="htole16" />
      <define header="sys/endian.h" export="htole32" />
      <define header="sys/endian.h" export="htole64" />
      <define header="sys/endian.h" export="be16toh" />
      <define header="sys/endian.h" export="be32toh" />
      <define header="sys/endian.h" export="be64toh" />
      <define header="sys/endian.h" export="htobe16" />
      <define header="sys/endian.h" export="htobe32" />
      <define header="sys/endian.h" export="htobe64" />
      
      <dependency name="boost" compiler="gcc" version="1.55.0" option="tests" />
      <dependency name="boost" compiler="clang" version="1.54.0" option="tests" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="secp256k1" version="0.0.1" />
      <dependency name="java" option="java" />
      <dependency name="python" version="2.7" option="python" />

      <flag name="Wall" comment="Warn on all stuff." context="c" />
      <flag name="Wextra" comment="Warn on extra stuff." context="c" />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." context="c" />
      <flag name="Wno-missing-braces" comment="Conform to style." context="c++" />
      <flag name="Wno-mismatched-tags" compiler="clang" comment="Conflict in stdlib under clang." context="c++" />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." context="c++" />

      <flag name="fstack-protector" comment="Protect stack." context="link" />
      <flag name="fstack-protector-all" comment="Protect stack comprehensively." context="link" />
      <flag name="fvisibility-hidden" compiler="gcc" comment="Hide internal functions from external libs." context="c++" />
      <flag name="fvisibility-inlines-hidden" compiler="gcc" comment="Hide inlines from external libs." context="c++" />
    </configure>

    <make>
      <product prefix="pkgconfig" >
        <file path="libbitcoin-consensus.pc" />
      </product>
      <product prefix="doc" >
        <file path="AUTHORS" />
        <file path="COPYING" />
        <file path="ChangeLog" />
        <file path="INSTALL" />
        <file path="NEWS" />
        <file path="README" />
      </product>
      <product prefix="lib" path="src" name="bitcoin-consensus" uuid="6c521d95-00ce-4120-97d1-430e2870d738" >
        <library name="secp256k1" />
        <headers path="include" />
        <headers path="src" />
        <headers path="src/clone" />
        <sources path="src" />
      </product>
      <product prefix="bin" path="test" name="libbitcoin_consensus_test" test="true" option="tests" uuid="d282ef8c-6217-483c-ac47-864b2fba50fd" >
        <runner/>
        <library name="bitcoin-consensus" />
        <library name="boost" />
        <library name="boost_unit_test_framework" />
        <headers path="include" />
        <headers path="src" />
        <headers path="src/clone" />
        <sources path="test" />
      </product>
      <product prefix="include" container="bitcoin" >
        <files path="include/bitcoin" />
      </product>
      <product prefix="lib" path="bindings/java/wrap" name="bitcoin-consensus-jni" option="java" >
        <library name="bitcoin-consensus" />
        <library name="java" />
        <headers path="include" />
        <sources path="bindings/java/wrap" />
      </product>
      <product prefix="javaexec" distribute="true" install="false" option="java" >
        <files path="bindings/java/proxy/org/libbitcoin/consensus" />
      </product>
      <product prefix="jarexec" distribute="false" install="true" option="java" >
        <file path="org.libbitcoin.consensus-${VERSION}.jar" />
      </product>
      <product prefix="pkgpyexec" path="bindings/python/wrap" name="_bitcoin-consensus" unprefixed="true" option="python" >
        <library name="bitcoin-consensus" />
        <library name="python" />
        <headers path="include" />
        <sources path="bindings/python/wrap" />
      </product>
      <product prefix="pkgpython" option="python" >
        <files path="bindings/python/proxy" />
      </product>
    </make>

    <install>
      <!-- Boost.system is necessary for detection, which is only required for test. -->
      <build name="boost" version="1.55.0" parallel="true" compiler="gcc" >
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="boost" version="1.54.0" parallel="true" compiler="clang" >
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="version4" parallel="true" >
        <option value="--disable-tests" />
        <option value="--enable-module-recovery" />
      </build>
      <build name="bitcoin-consensus" github="libbitcoin" repository="libbitcoin-consensus" branch="version2" parallel="true" >
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <get name="swig" />
        <option value="--with-java" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <get name="swig" />
        <option value="--with-python" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="static" coverage="true" >
        <exclude path="clone/*" />
        <get name="swig" />
        <option value="--with-java" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--build-dir=my-build" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-O0 -g -static --coverage'" />
        <option value="CXXFLAGS='-O0 -g -static --coverage'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!--<get name="boost" />-->
        <get name="swig" />
        <option value="--with-python" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <get name="boost1.54" />
        <option value="--disable-ndebug" />
        <option value="--disable-static" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="swig" />
        <option value="--with-java" />
        <option value="--with-python" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CFLAGS='-Os -s'" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-explorer" version="2.2.1" email="eric@voskuil.org" >

    <package library="bitcoin-explorer" description="Bitcoin Command Line Tool" url="https://github.com/libbitcoin/libbitcoin-explorer" />

    <configure>
      <option type="with" name="bash-completiondir" default="no" example="[=DIR]" unprefixed="true" substitute="true" conditional="true" description="Install bash completion support, optionally specifying the directory. This option may require elevated permissions." />
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=DIR" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="with" name="console" default="yes" conditional="true" description="Compile console application." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK" inherited="true" description="Required for dynamically linking boost test." />

      <dependency name="boost" compiler="gcc" version="1.55.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="bash-completion" version="2.0.0" option="bash-completiondir" unprefixed="true" extract="completionsdir" default="${datadir}/bash-completion/completions" />
      <dependency name="bitcoin-client" version="2.2.0" />
      <!-- -ldl is missing from icu package config and ends up out of order from libbitcoin inclusion -->
      <dependency name="dl" function="dlopen" system="linux" optionXXX="icu" />
      
      <flag name="std=c++11" comment="Require c++11 for all c++ products." context="c++" />

      <flag name="Wall" comment="Warn on all stuff." context="c" />
      <flag name="Wextra" comment="Warn on extra stuff." context="c" />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." context="c" />
      <flag name="Wno-missing-braces" comment="Conform to style." context="c++" />
      <flag name="Wno-mismatched-tags" compiler="clang" comment="Conflict in stdlib under clang." context="c++" />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." context="c++" />
      <flag name="Wno-deprecated-declarations" compiler="gcc" comment="Clean up boost 1.55 headers." context="c++" />
      
      <!-- bx -->
      <flag name="Wno-unused-parameter" comment="Clean up bx generated code." context="c++" />

      <flag name="fstack-protector" comment="Protect stack." context="link" />
      <flag name="fstack-protector-all" comment="Protect stack comprehensively." context="link" />
      <flag name="fvisibility-hidden" compiler="gcc" comment="Hide internal functions from external libs." context="c++" />
      <flag name="fvisibility-inlines-hidden" compiler="gcc" comment="Hide inlines from external libs." context="c++" />
    </configure>

    <make>
      <product prefix="pkgconfig" >
        <file path="libbitcoin-explorer.pc" />
      </product>
      <product prefix="doc" >
        <file path="AUTHORS" />
        <file path="COPYING" />
        <file path="ChangeLog" />
        <file path="INSTALL" />
        <file path="NEWS" />
        <file path="README" />
      </product>
      <product prefix="lib" path="src" name="bitcoin-explorer" uuid="4a1d71d5-3dee-47f0-a189-21c301e2808f" >
        <flag define="sysconfdir" />
        <library name="bitcoin-client" />
        <!-- -ldl is missing from icu package config and ends up out of order from libbitcoin inclusion -->
        <library name="dl" />
        <headers path="include" />
        <sources path="src" />
      </product>
      <product prefix="bin" path="console" name="bx" option="console" uuid="098a91f3-291c-4a0d-ae5a-bc5f9f5693ed" >
        <flag define="sysconfdir" />
        <library name="bitcoin-explorer" />        
        <headers path="include" />
        <sources path="console" />
      </product>
      <product prefix="bin" path="test" name="libbitcoin_explorer_test" test="true" option="tests" uuid="1a0e5edd-e803-4268-9dfb-044eb80bb0f1" >
        <runner>
          <run test="generated" />
          <!--<run test="network" />-->
          <run test="obsolete" />
          <run test="offline" />
          <run test="primitives" />
          <run test="stub" />
        </runner>
        <flag define="sysconfdir" />
        <library name="bitcoin-explorer" />        
        <library name="boost_unit_test_framework" />
        <headers path="include" />
        <sources path="test" />
      </product>
      <product prefix="include" container="bitcoin" >
        <files path="include/bitcoin" />
      </product>
      <product prefix="bash_completion" distribute="true" install="true" option="bash-completiondir" >
        <file path="data/bx" />
      </product>
      <product prefix="sysconf" container="libbitcoin" >
        <file path="data/bx.cfg" />
      </product>
    </make>

    <install>
      <build name="icu" version="55.1" parallel="true" >
        <!-- Bug in ICU build requires --enable-draft. -->
        <option value="--enable-draft" />
        <option value="--enable-tools" />
        <option value="--disable-extras" />
        <option value="--disable-icuio" />
        <option value="--disable-layout" />
        <option value="--disable-layoutex" />
        <option value="--disable-tests" />
        <option value="--disable-samples" />
      </build>
      <build name="boost" version="1.55.0" parallel="true" compiler="gcc" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-thread" />
        <option value="--with-test" />
      </build>
      <build name="boost" version="1.54.0" parallel="true" compiler="clang" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-thread" />
        <option value="--with-test" />
      </build>
      <build name="sodium" github="jedisct1" repository="libsodium" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="zmq" github="zeromq" repository="libzmq" branch="master" parallel="true" >
        <option value="--with-libsodium" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmq" github="zeromq" repository="czmq" branch="master" parallel="true" >
        <option value="--without-zmakecert" />
        <option value="--without-test_zgossip" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmqpp" github="zeromq" repository="czmqpp" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="version4" parallel="true" >
        <option value="--disable-tests" />
        <option value="--enable-module-recovery" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-examples" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-client" github="libbitcoin" repository="libbitcoin-client" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-examples" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-explorer" github="libbitcoin" repository="libbitcoin-explorer" branch="version2" parallel="true" >
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <option value="--with-icu" />
        <option value="--build-icu" />
        <option value="--build-boost" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="static" coverage="false" >
        <!-- Coverage is disabled due to Travis-CI time limit of 50 minutes. -->
        <get name="bash-completion" />
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--build-dir=my-build" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="--with-bash-completiondir" />
        <option value="CFLAGS='-Os -s -static'" />
        <option value="CXXFLAGS='-Os -s -static'" />
        <!--<option value="CFLAGS='-O0 -g -static --coverage'" />-->
        <!--<option value="CXXFLAGS='-O0 -g -static --coverage'" />-->
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <get name="boost" />
        <get name="bash-completion" />
        <option value="--with-bash-completiondir" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <get name="boost1.54" />
        <option value="--disable-ndebug" />
        <option value="--disable-static" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="bash-completion" />
        <option value="--build-boost" />
        <option value="--disable-static" />
        <option value="--with-bash-completiondir" />
        <option value="CFLAGS='-Os -s'" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

  <repository name="libbitcoin-node" version="2.2.0" email="genjix@riseup.net" >

    <package library="bitcoin-node" description="Bitcoin Full Node" url="https://github.com/libbitcoin/libbitcoin-node" />

    <configure>
      <option type="with" name="bash-completiondir" default="no" example="[=DIR]" unprefixed="true" substitute="true" conditional="true" description="Install bash completion support, optionally specifying the directory. This option may require elevated permissions." />
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=DIR" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="with" name="console" default="yes" conditional="true" description="Compile console application." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK" inherited="true" description="Required for dynamically linking boost test." />

      <dependency name="boost" compiler="gcc" version="1.55.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="bash-completion" version="2.0.0" option="bash-completiondir" unprefixed="true" extract="completionsdir" default="${datadir}/bash-completion/completions" />
      <dependency name="bitcoin-blockchain" version="2.2.0" />
      
      <flag name="std=c++11" comment="Require c++11 for all c++ products." context="c++" />

      <flag name="Wall" comment="Warn on all stuff." context="c" />
      <flag name="Wextra" comment="Warn on extra stuff." context="c" />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." context="c" />
      <flag name="Wno-missing-braces" comment="Conform to style." context="c++" />
      <flag name="Wno-mismatched-tags" compiler="clang" comment="Conflict in stdlib under clang." context="c++" />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." context="c++" />
      <flag name="Wno-deprecated-declarations" compiler="gcc" comment="Clean up boost 1.55 headers." context="c++" />

      <flag name="fstack-protector" comment="Protect stack." context="link" />
      <flag name="fstack-protector-all" comment="Protect stack comprehensively." context="link" />
      <flag name="fvisibility-hidden" compiler="gcc" comment="Hide internal functions from external libs." context="c++" />
      <flag name="fvisibility-inlines-hidden" compiler="gcc" comment="Hide inlines from external libs." context="c++" />
    </configure>

    <make>
      <product prefix="pkgconfig" >
        <file path="libbitcoin-node.pc" />
      </product>
      <product prefix="doc" >
        <file path="AUTHORS" />
        <file path="COPYING" />
        <file path="ChangeLog" />
        <file path="INSTALL" />
        <file path="NEWS" />
        <file path="README" />
      </product>
      <product prefix="lib" path="src" name="bitcoin-node" uuid="5ffb5f52-0772-4404-bb2f-39be5f82a158" >
        <flag define="sysconfdir" />
        <library name="bitcoin-blockchain" />
        <headers path="include" />
        <sources path="src" />
      </product>
      <product prefix="bin" path="test" name="libbitcoin_node_test" test="true" option="tests" uuid="4bd50864-d3bc-4f64-aebb-ddeb8a622fa8" >
        <runner>
          <run test="config_tests" />
          <run test="thread_tests" />
          <!-- Too much for Travis. -->
          <!--<run test="node_tests" />-->
        </runner>
        <library name="bitcoin-node" />
        <library name="boost_unit_test_framework" />
        <headers path="include" />
        <sources path="test" />
      </product>
      <product prefix="bin" path="console" name="bn" option="console" uuid="d3404804-c83f-46ce-a5a6-3a39ef93de46" >
        <library name="bitcoin-node" />        
        <headers path="include" />
        <sources path="console" />
      </product>
      <product prefix="include" container="bitcoin" >
        <files path="include/bitcoin" />
      </product>
      <product prefix="bash_completion" distribute="true" install="true" option="bash-completiondir" >
        <file path="data/bn" />
      </product>
      <product prefix="sysconf" container="libbitcoin" option="console" >
        <file path="data/bn.cfg" />
      </product>
    </make>

    <install>
      <build name="boost" version="1.55.0" parallel="true" compiler="gcc" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="boost" version="1.54.0" parallel="true" compiler="clang" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="version4" parallel="true" >
        <option value="--disable-tests" />
        <option value="--enable-module-recovery" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-examples" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-consensus" github="libbitcoin" repository="libbitcoin-consensus" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-blockchain" github="libbitcoin" repository="libbitcoin-blockchain" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-tools" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-node" github="libbitcoin" repository="libbitcoin-node" branch="version2" parallel="true" >
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <option value="--without-consensus" />
        <!-- these allow unused build to complete -->
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="static" coverage="true" >
        <get name="bash-completion" />
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--build-dir=my-build" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="--with-bash-completiondir" />
        <option value="CFLAGS='-O0 -g -static --coverage'" />
        <option value="CXXFLAGS='-O0 -g -static --coverage'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!--<get name="boost" />-->
        <get name="bash-completion" />
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
        <option value="--with-bash-completiondir" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <get name="boost1.54" />
        <option value="--disable-ndebug" />
        <option value="--disable-static" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="bash-completion" />
        <option value="--without-consensus" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="--with-bash-completiondir" />
        <option value="CFLAGS='-Os -s'" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>
  </repository>

  <!--<repository name="libbitcoin-protocol" version="0.1.0" email="mienkphi@gmail.com" >

    <package library="bitcoin-protocol" description="Bitcoin Blockchain Query Privacy Protocol" url="https://github.com/libbitcoin/libbitcoin-protocol" />

    <configure>
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=DIR" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK" inherited="true" description="Required for dynamically linking boost test." />

      <dependency name="boost" compiler="gcc" version="1.55.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="protobuf" version="2.6.0" unprefixed="true" />
      <dependency name="sodium" version="1.0.0" comment="The chained zmq dependency doesn't set a minimum version for sodium." />
      <dependency name="czmq++" version="1.1.0" />
      <dependency name="bitcoin" version="2.8.0" />
      
      <flag name="std=c++11" comment="Require c++11 for all c++ products." context="c++" />

      <flag name="Wall" comment="Warn on all stuff." context="c" />
      <flag name="Wextra" comment="Warn on extra stuff." context="c" />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." context="c" />
      <flag name="Wno-missing-braces" comment="Conform to style." context="c++" />
      <flag name="Wno-mismatched-tags" compiler="clang" comment="Conflict in stdlib under clang." context="c++" />

      <!-/- boost -/->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." context="c++" />
      <flag name="Wno-deprecated-declarations" compiler="gcc" comment="Clean up boost 1.55 headers." context="c++" />

      <!-/- protobuf -/->
      <flag name="Wno-unused-parameter" comment="Clean up protobuf headers." />
      <flag name="Wno-sign-compare" compiler="clang" comment="Clean up protobuf headers, static." context="c++" />
      <flag name="Wno-nested-anon-types" compiler="clang" comment="Clean up protobuf headers, static." context="c++" />

      <flag name="fstack-protector" comment="Protect stack." context="link" />
      <flag name="fstack-protector-all" comment="Protect stack comprehensively." context="link" />
      <flag name="fvisibility-hidden" compiler="gcc" comment="Hide internal functions from external libs." context="c++" />
      <flag name="fvisibility-inlines-hidden" compiler="gcc" comment="Hide inlines from external libs." context="c++" />
    </configure>

    <make>
      <product prefix="pkgconfig" >
        <file path="libbitcoin-protocol.pc" />
      </product>
      <product prefix="doc" >
        <file path="AUTHORS" />
        <file path="COPYING" />
        <file path="ChangeLog" />
        <file path="INSTALL" />
        <file path="NEWS" />
        <file path="README" />
      </product>
      <product prefix="lib" path="src" name="bitcoin-protocol" uuid="6b94e2a5-c054-4790-963d-a7be493259b0" >
        <library name="bitcoin" />
        <library name="protobuf" />
        <library name="sodium" />
        <library name="czmq++" />
        <headers path="include" />
        <sources path="src" />
      </product>
      <product prefix="bin" path="test" name="libbitcoin_protocol_test" test="true" option="tests" uuid="c42be17b-063d-44f1-a5bb-9f8295144b70" >
        <runner/>
        <library name="bitcoin-protocol" />        
        <library name="boost_unit_test_framework" />
        <headers path="include" />
        <sources path="test" />
      </product>
      <product prefix="include" container="bitcoin" >
        <files path="include/bitcoin" />
      </product>
    </make>

    <install>
      <build name="boost" version="1.55.0" parallel="true" compiler="gcc" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="boost" version="1.54.0" parallel="true" compiler="clang" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="protobuf" github="libbitcoin" repository="protobuf" branch="2.6.0" parallel="false" >
        <option value="--enable-silent-rules" />
      </build>
      <build name="sodium" github="jedisct1" repository="libsodium" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="zmq" github="zeromq" repository="libzmq" branch="master" parallel="true" >
        <option value="--with-libsodium" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmq" github="zeromq" repository="czmq" branch="master" parallel="true" >
        <option value="--without-zmakecert" />
        <option value="--without-test_zgossip" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmqpp" github="zeromq" repository="czmqpp" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="version4" parallel="true" >
        <option value="--disable-tests" />
        <option value="--enable-module-recovery" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-examples" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-protocol" github="libbitcoin" repository="libbitcoin-protocol" branch="master" parallel="true" >
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="static" coverage="true" >
        <exclude path="interface.pb.*" />
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--build-dir=my-build" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-O0 -g -static --coverage'" />
        <option value="CXXFLAGS='-O0 -g -static --coverage'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!-/-<get name="boost" />-/->
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <get name="boost1.54" />
        <option value="--disable-ndebug" />
        <option value="--disable-static" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="CFLAGS='-Os -s'" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>-->

  <repository name="libbitcoin-server" version="2.2.0" email="genjix@riseup.net" >

    <!-- TODO: There is no library produced, but we get an error if we don't emit the reference. -->
    <package library="bitcoin-server" description="Bitcoin Full Node and Query Server" url="https://github.com/libbitcoin/libbitcoin-server" />

    <configure>
      <option type="with" name="bash-completiondir" default="no" example="[=DIR]" unprefixed="true" substitute="true" conditional="true" description="Install bash completion support, optionally specifying the directory. This option may require elevated permissions." />
      <option type="with" name="pkgconfigdir" default="${libdir}/pkgconfig" example="=DIR" unprefixed="true" substitute="true" description="Path to pkgconfig directory." />
      <option type="with" name="tests" default="yes" conditional="true" description="Compile with unit tests." />
      <option type="with" name="console" default="yes" conditional="true" description="Compile console application." />
      <option type="enable" name="ndebug" default="yes" define="NDEBUG" description="Compile without debug assertions." />
      <option type="enable" name="shared" default="yes" define="BOOST_TEST_DYN_LINK" inherited="true" description="Required for dynamically linking boost test." />

      <dependency name="boost" compiler="gcc" version="1.55.0" />
      <dependency name="boost" compiler="clang" version="1.54.0" />
      <dependency name="boost_unit_test_framework" option="tests" />
      <dependency name="bash-completion" version="2.0.0" option="bash-completiondir" unprefixed="true" extract="completionsdir" default="${datadir}/bash-completion/completions" />

      <dependency name="sodium" version="1.0.0" comment="The chained zmq dependency doesn't set a minimum version for sodium." />
      <dependency name="czmq++" version="1.1.0" />
      <dependency name="bitcoin-node" version="2.2.0" />
      
      <flag name="std=c++11" comment="Require c++11 for all c++ products." context="c++" />

      <flag name="Wall" comment="Warn on all stuff." context="c" />
      <flag name="Wextra" comment="Warn on extra stuff." context="c" />
      <flag name="Wpedantic" alternate="pedantic" comment="Be really annoying." context="c" />
      <flag name="Wno-missing-braces" comment="Conform to style." context="c++" />
      <flag name="Wno-mismatched-tags" compiler="clang" comment="Conflict in stdlib under clang." context="c++" />

      <!-- boost -->
      <flag name="Wno-deprecated-register" compiler="clang" comment="Clean up boost 1.54 headers." context="c++" />
      <flag name="Wno-deprecated-declarations" compiler="gcc" comment="Clean up boost 1.55 headers." context="c++" />
      
      <flag name="fstack-protector" comment="Protect stack." context="link" />
      <flag name="fstack-protector-all" comment="Protect stack comprehensively." context="link" />
      <flag name="fvisibility-hidden" compiler="gcc" comment="Hide internal functions from external libs." context="c++" />
      <flag name="fvisibility-inlines-hidden" compiler="gcc" comment="Hide inlines from external libs." context="c++" />
    </configure>
    
    <make>
      <product prefix="pkgconfig" >
        <file path="libbitcoin-server.pc" />
      </product>
      <product prefix="doc" >
        <file path="AUTHORS" />
        <file path="COPYING" />
        <file path="ChangeLog" />
        <file path="INSTALL" />
        <file path="NEWS" />
        <file path="README" />
      </product>
      <product prefix="lib" path="src" name="bitcoin-server" uuid="73ce0ac2-ecb2-4e8d-a136-17840c0371a0" >
        <flag define="sysconfdir" />
        <library name="bitcoin-node" />
        <library name="sodium" />
        <library name="czmq++" />
        <headers path="include" />
        <sources path="src" />
      </product>
      <product prefix="bin" path="test" name="libbitcoin_server_test" test="true" option="tests" uuid="66a0e586-2e3a-448f-bcd0-348afeb0d5ea" >
        <runner>
          <run test="server_tests" />
        </runner>
        <library name="bitcoin-server" />
        <library name="boost_unit_test_framework" />
        <headers path="include" />
        <sources path="test" />
      </product>
      <product prefix="bin" path="console" name="bs" option="console" uuid="f45b7d90-90bc-41ef-9ad1-9b29256a09fe" >
        <library name="bitcoin-server" />
        <headers path="include" />
        <sources path="console" />
      </product>
      <product prefix="include" container="bitcoin" >
        <files path="include/bitcoin" />
      </product>
      <product prefix="bash_completion" distribute="true" install="true" option="bash-completiondir" >
        <file path="data/bs" />
      </product>
      <product prefix="sysconf" container="libbitcoin" >
        <file path="data/bs.cfg" />
      </product>
    </make>

    <install>
      <build name="boost" version="1.55.0" parallel="true" compiler="gcc" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="boost" version="1.54.0" parallel="true" compiler="clang" >
        <option value="--with-chrono" />
        <option value="--with-date_time" />
        <option value="--with-filesystem" />
        <option value="--with-locale" />
        <option value="--with-program_options" />
        <option value="--with-regex" />
        <option value="--with-system" />
        <option value="--with-test" />
      </build>
      <build name="sodium" github="jedisct1" repository="libsodium" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="zmq" github="zeromq" repository="libzmq" branch="master" parallel="true" >
        <option value="--with-libsodium" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmq" github="zeromq" repository="czmq" branch="master" parallel="true" >
        <option value="--without-zmakecert" />
        <option value="--without-test_zgossip" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="czmqpp" github="zeromq" repository="czmqpp" branch="master" parallel="true" >
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="secp256k1" github="libbitcoin" repository="secp256k1" branch="version4" parallel="true" >
        <option value="--disable-tests" />
        <option value="--enable-module-recovery" />
      </build>
      <build name="bitcoin" github="libbitcoin" repository="libbitcoin" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-examples" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-consensus" github="libbitcoin" repository="libbitcoin-consensus" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-blockchain" github="libbitcoin" repository="libbitcoin-blockchain" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-tools" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-node" github="libbitcoin" repository="libbitcoin-node" branch="version2" parallel="true" >
        <option value="--without-tests" />
        <option value="--without-console" />
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
      <build name="bitcoin-server" github="libbitcoin" repository="libbitcoin-server" branch="version2" parallel="true" >
        <option value="${with_boost}" />
        <option value="${with_pkgconfigdir}" />
      </build>
    </install>

    <matrix>
      <job system="osx" compiler="clang" link="static" >
        <option value="--without-consensus" />
        <!-- these allow unused build to complete -->
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
        <option value="--enable-testnet" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
      </job>
      <job system="linux" compiler="clang" link="static" >
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
        <option value="--disable-shared" />
        <option value="--build-boost" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="static" coverage="true" >
        <get name="bash-completion" />
        <option value="--build-boost" />
        <option value="--disable-shared" />
        <option value="--build-dir=my-build" />
        <option value="--prefix=$TRAVIS_BUILD_DIR/my-prefix" />
        <option value="--with-bash-completiondir" />
        <option value="CFLAGS='-O0 -g -static --coverage'" />
        <option value="CXXFLAGS='-O0 -g -static --coverage'" />
      </job>
      <job system="osx" compiler="clang" link="dynamic" >
        <!--<get name="boost" />-->
        <get name="bash-completion" />
        <option value="--with-secp256k1" />
        <option value="--without-openssl" />
        <option value="--with-bash-completiondir" />
      </job>
      <job system="linux" compiler="clang" link="dynamic" sudo="true" >
        <get name="boost1.54" />
        <option value="--disable-ndebug" />
        <option value="--disable-static" />
        <option value="CFLAGS='-Os'" />
        <option value="LDLIBS='-lstdc++'" />
        <option value="CXXFLAGS='-Os -stdlib=libstdc++'" />
      </job>
      <job system="linux" compiler="gcc" link="dynamic" sudo="true" >
        <get name="bash-completion" />
        <option value="--without-consensus" />
        <option value="--disable-static" />
        <option value="--build-boost" />
        <option value="--with-bash-completiondir" />
        <option value="CFLAGS='-Os -s'" />
        <option value="CXXFLAGS='-Os -s'" />
      </job>
    </matrix>

  </repository>

</generate>
